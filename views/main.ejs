<!DOCTYPE html>
<html>
<meta charset="utf-8">
<head>
  <title><%=title%></title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="shortcut icon" href="favicon.ico">

  <!-- CSS Global Compulsory -->
  <link rel="stylesheet" href="/assets/plugins/bootstrap/css/bootstrap.min.css">
  <link rel="stylesheet" href="/assets/css/style.css">
  <link rel='stylesheet' href='/stylesheets/style.css' />

  <!-- CSS Implementing Plugins -->
  <link rel="stylesheet" href="/assets/plugins/line-icons/line-icons.css">
  <link rel="stylesheet" href="/assets/plugins/font-awesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="/assets/plugins/flexslider/flexslider.css">     
  <link rel="stylesheet" href="/assets/plugins/parallax-slider/css/parallax-slider.css">
  <link rel="stylesheet" href="/assets/plugins/fancybox/source/jquery.fancybox.css">

  <!-- CSS Theme -->    
  <link rel="stylesheet" href="/assets/css/themes/default.css" id="style_color">

  <link rel="stylesheet" href="/stylesheets/main_style.css">
  
  <!-- CSS Customization -->
  <link rel="stylesheet" href="/assets/css/custom.css">

  <script src="/javascripts/jquery-1.9.1.min.js" type="text/javascript"></script> <!-- 동그라미 나열 -->

  <!-- here calender links -->
  <link rel="stylesheet" href="/calendar/jquery-ui.css" />
  <!-- <link rel="stylesheet" href="/calendar/style.css" /> -->
  <!-- end calender links -->
  <!-- <script type="text/javascript">
    $(document).ready(function(){
      $(".icon-photoLook, .icon-gashipYo, .icon-photoUpIcon , .icon-infomation, #toggle_button, .canvas:not('.circle .icon-coloringIcon')").click(function(e){  //배경을 클릭하면 레이어를 사라지게 하는 이벤트 핸들러
        $("#calender").fadeOut();
        $("#ui-datepicker-div").attr("style","display=none;");
        e.preventDefault();
        console.log("calender clicked and className: " + this.className);
      });
       $(".icon-photoLook, .icon-coloringIcon, .icon-photoUpIcon, .icon-gashipYo, #toggle_button, .canvas:not('.circle .icon-infomation')").click(function(e){  //배경을 클릭하면 레이어를 사라지게 하는 이벤트 핸들러
        $("#slideshow").fadeOut();
        e.preventDefault();
        console.log("slideshow clicked and className: " + this.className);
      });
     });
  </script> -->
</head>
<body>
  <div id="tooltip_country" class="hidden">
    <p><span id="county-label"></span></p>
  </div>
  <div id="tooltip_state" class="hidden">
    <p><span id="state-label"></span></p>
  </div>

  <script src="/javascripts/d3.v3.min.js"></script>
  <script src="/calendar/jquery-1.9.1.js"></script>
  <script src="/javascripts/topojson.v1.min.js"></script>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.js"></script> 
  <script src="/javascripts/jquery.form.js"></script> 
  <script src="/javascripts/jquery.validate.min.js"></script>
  <script src="/calendar/jquery-ui.js"></script>
  <script>

    function search_friend(){
      d3.select('#view_following').classed("hidden", true);
      d3.select('#view_follower').classed('hidden', false);
      d3.select('.friend_plus').classed('active', true);
      d3.select('.friend_see').classed('active', false);
      clear_div();
    }

    function friend_list(){
      d3.select('#view_following').classed("hidden", false);
      d3.select('#view_follower').classed('hidden', true);
      d3.select('.friend_plus').classed('active', false);
      d3.select('.friend_see').classed('active', true);
      clear_div();
    }

    function clear_div(){
      $("#friend_list").empty();
    }

    function link_friend_page(f_id, f_name){

      $(this).load( "/add_following", { "following_id": f_id, "following_name": f_name } );

    }

    function go_friend_map(m_id, m_name) { 

      console.log(m_id);
      console.log(m_name);

      var f = document.getElementById('GoFirendMap');

      f.user_id.value = m_id;
      f.user_name.value = m_name;

      f.action="/following_world_map";
      f.method="post";
      f.submit();

    }

    $('#people_search_form').ready(function() {  

      $('#people_search_form').ajaxForm(function(reaults) { 

        var f = document.getElementById('people_search_form');

        if(f.user_name.value != ''){

            $("#friend_list").empty(); // div 하위 요소 모두 제거

            $.each(reaults, function(i, data)
            {

              var div_data = $("<button id='friend_list_button'><img src='http://graph.facebook.com/" + data.user_id + "/picture'><p id='friend_name'>" + data.user_name + "</p></button>")
              .click(function(){ link_friend_page(data.user_id, data.user_name) });
              $(div_data).appendTo("#friend_list");

            });

            f.user_name.value = '';
          }

        });

    }); 

    $('#following_search_form').ready(function() {

      $('#following_search_form').ajaxForm(function(reaults) { 

        var f = document.getElementById('following_search_form');

          $("#following_list").empty(); // div 하위 요소 모두 제거

          $.each(reaults, function(i, data)
          {

            var div_data = $("<button id='friend_list_button'><img src='http://graph.facebook.com/" + data.fing_following_user_id + "/picture'><p id='friend_name'>" + data.fing_following_user_name + "</p></button>")
            .click(function(){ go_friend_map(data.fing_following_user_id, data.fing_following_user_name) });
            $(div_data).appendTo("#following_list");

          });

          f.user_name.value = '';

        });

    });
    

  </script>

  <!--=== Style Switcher ===-->    
  <i class="style-switcher-btn"><img src="/images/menubar/friend_map.png"></i>
  <a class="style-switcher friend_see animated fadeInRight active" href="javascript:friend_list();">
    <img src="/images/friend_list/myFriendList.png"><p> 팔로잉</p>
  </a>
  <a class="style-switcher friend_plus animated fadeInRight" href="javascript:search_friend();">
    <img src="/images/friend_list/friendschuga.png"><p>팔로잉</p><p>추가</p>
  </a>
  <div class="style-switcher animated fadeInRight">
    <div class="theme-close"><img src="/images/friend_list/Xicon.png"></div>
    <ul class="list-unstyled">
      <div id="view_following">
          <p id="user_name"><%=user.name%> 님의 팔로잉</p>
        <!-- Friend Search -->
        <div class="friend-input-group">
          <form id="following_search_form" action="/search_my_f" method="post">
            <input type="text" class="form-control" name="user_name" placeholder="나의 팔로잉 검색">
            <span class="input-group-btn">
              <button class="btn-u" id="flowwing_search_button" type="submit"><img src="/images/menubar/search.png"></button>
            </span>
          </form>
        </div>

        <!-- End Friend Search --> 
        <form id="GoFirendMap">
          <input type="hidden" name="user_id">
          <input type="hidden" name="user_name">
          <div class="friend_list" id="following_list">
            <% following_lists.forEach(function(item, index) { %>
            <button id="friend_list_button" onclick="go_friend_map('<%=item.fing_following_user_id%>','<%=item.fing_following_user_name%>');"><img src="http://graph.facebook.com/<%=item.fing_following_user_id%>/picture"><p id="friend_name"><%=item.fing_following_user_name%></p></button>
            <% }); %>
          </div>
        </form>
      </div>

      <div id="view_follower" class="hidden">
        <p id="user_name">팔로잉 추가</p>
        <!-- Friend Search -->
        <div class="friend-input-group" id="search_name">
          <form id="people_search_form" action="/search_pm_f" method="post">
            <input type="text" class="form-control" name="user_name" placeholder="이름 검색">
            <span class="input-group-btn">
              <button class="btn-u" id="friend_search_button" type="submit"><img src="/images/menubar/search.png"></button>
            </span>
          </form>
        </div>
        <!-- End Friend Search -->
        <div id="friend">
          <div class='friend_list' id="friend_list"></div>
        </div>
      </div>

    </ul>
  </div><!--/style-switcher--> 
  <!--=== End Style Switcher ===-->  
  
  <div class="wrapper">
    <div class="header">

      <!-- Navbar -->
      <div class="navbar navbar-default" role="navigation">
        <!-- <div class="container"> -->

        <div class="navbar-header">
          <% if (user) { %>
          <a class="navbar-brand" href="/main">
            <img id="logo-header" src="/images/menubar/PageLogoWhite.png" alt="Logo">
          </a>
          <!-- Search -->
          <div class="input-group">
            <div class="input-group animated fadeInDown">
              <form class="search_form" action="/main" method="post">
                <input type="text" class="form-control" name="search_content" placeholder="국가 / 도시 검색">
                <span class="input-group-btn">
                  <button class="btn-u" id="search_button" type="submit"><img src="/images/menubar/search.png"></button>
                </span>
              </form>
            </div>
          </div>
          <!-- End Search -->
          <% } else { %>
          <a class="navbar-brand" href="/intro">
            <img id="logo-header" src="/images/menubar/PageLogoWhite.png" alt="Logo">
          </a>
          <% } %> 

        </div>

        <div class="menu">

          <div class="facebook-login">
            <% if (user) { %>
            <a href="/logout">
              <button class="btn-facebook">
                <i class="fa fa-facebook"></i> Logout
              </button>
            </a>
            <div class="information">
              <p class="welcome"> Welcome<br> <%= user.name %>'s photomapper</p>
            </div>
            <div class="picture">
              <img src="http://graph.facebook.com/<%=user.id%>/picture">
            </div>
            <% } else { %>
            <a href="/auth/facebook">
              <button class="btn-facebook">
                <i class="fa fa-facebook"></i> Login
              </button>
            </a>
            <% } %> 
          </div>

          <% if (user) { %>


          <!-- Setting -->
          <ul class="nav navbar-nav">
            <li id="setting">
              <a href="/setting">
                <img src="/images/menubar/setting.png" alt="설정"> 
              </a>
            </li>
          </ul>
          <!-- End Setting -->

          
          <!-- statistics view -->
          <ul class="nav navbar-nav">
            <li id="statistics">
              <a href="/statistics">
                <!-- <img src="/images/menubar/full_photo.png" alt="내 사진 보기"> -->
                <i class="fa fa-bar-chart-o"></i>
              </a>
            </li>
          </ul>
          <!-- End statistics View -->

          <!-- photo view -->
          <ul class="nav navbar-nav">
            <li id="photoView">
              <a href="/all_photo_view">
                <img src="/images/menubar/full_photo.png" alt="내 사진 보기">
              </a>
            </li>
          </ul>
          <!-- End Photo View -->

          <!-- Friend -->
          <ul class="nav navbar-nav">
            <li id="friend">
              <a href="/all_following_world_map">
                <img src="/images/menubar/friend_map.png" alt="친구 지도 및 사진 보기">
              </a>
            </li>
          </ul>
          <!-- End Friend -->

          <% } %> 

        </div>
        <!-- End menu -->

        <!-- End Container -->
        <!-- </div>     -->

        <!-- End Navbar -->
      </div>        

      <!-- header end -->
    </div>



    <!-- layerpopup start -->
    <script type="text/javascript">
      
    /* layerpopup. js end */
  </script> 

  <div class="content">
    <form id="goLink">
      <input type="hidden" name="visit_nation_code" />
      <input type="hidden" name="visit_city_name" />
      <input type="hidden" name="want_nation_code" />
      <input type="hidden" name="want_city_name" />
      <input type="hidden" name="visit_date" />
      <input type="hidden" name="want_date" />
      <input type="hidden" name="nation_code" />
      <input type="hidden" name="city_name" />
      <input type="hidden" name="user_name" />
      <input type="hidden" name="user_id" />

      <div id="toggle" class="hidden">
        <a id="toggle_button"></a>
        <div class="circle" id="circle_id">
          <a href="#" onClick="return show_hide_box(this,170,50,'calender')"  class="icon-coloringIcon"><img src=".\images\coloringIcon.png"></a>
          <a href="javascript:photoLook();" class="icon-photoLook"><img src=".\images\photoLook.png"></a>
          <a href="javascript:gashipYo();" class="icon-gashipYo"><img src=".\images\gashipYo.png"></a>
          <a href="javascript:photoUpload();" class="icon-photoUpIcon"><img src=".\images\photoUpIcon.png"></a>
          <!-- <a href="#" class="icon-infomation" onclick="javascript:see_information();"><img src=".\images\infomation.png"></a> -->
          <a href="#" class="icon-infomation" onclick="show_hide_box(this,340,170,'slideshow');"><img src=".\images\infomation.png"></a>
    </form> 
    </div>
  </div>       


 
<div class="percentage">
  <!-- <div class="main-counters"> -->
  <div class="coloum">
    <div class="counters row-md-3 row-sm-3" id="counter_percentage" style="color:<%=user.color%>;">
      <span class="counter"><%= stats.percent %></span> %
    </div>
    <div class="counters row-md-3 row-sm-3" id="counter_number" style="color:<%=user.color%>;">
      여행한 국가 <span class="counter"><%= stats.visit_place_count %></span> 개
    </div>
    <div class="counters row-md-3 row-sm-3" id="counter_number" style="color:<%=user.color%>;">
      가고싶은 국가 <span class="counter"><%= stats.want_place_count %></span> 개
    </div>
  </div>
  <!-- </div> -->
</div>

 <!-- calender -->
   <script>
        $(function() {  
       $('#datepicker').datepicker({  
            // 달력 아이콘  
            showOn: "button",
            autoSize: false,
            buttonImage: "/calendar/calendar.png",  
            buttonImageOnly: true,
            // 달력 하단의 종료와 오늘 버튼 Show  
            showButtonPanel: true, 
            // date 포멧  
            dateFormat : "yy/mm/dd",  
            // 달력 에니메이션 ( show(default),slideDown,fadeIn,blind,bounce,clip,drop,fold,slide,"")  
            showAnim : "fadeIn",  
            // 다른 달의 일 보이기, 클릭 가능  
            showOtherMonths: true,  
            selectOtherMonths: true,  
            // 년도, 달 변경  
            changeMonth: true,  
            changeYear: true,   
            // 여러달 보이기  
            numberOfMonths: 1,  
            showButtonPanel: false,
            // 달력 선택 제한 주기(min: 현재부터 -20일,max:현재부터 +1달+10일)  
            // minDate: -20,  
            // maxDate: "+1M +10D",  
            // 주차 보여주기  
            // showWeek: true,  
            firstDay: 1  ,
            showMonthAfterYear: true,
          });
     });  
       $("img.ui-datepicker-trigger").attr("style","margin-left:5px;cursor:pointer;"); //이미지버튼 style적용
       $("#ui-datepicker-div").attr("style","display =block;");
</script>
 <div id = "calender" style="OVERFLOW:hidden; display:none;">
<p><input type="text" size="10"  id="datepicker" placeholder="연도/월/일" readonly/>
<img src="/images/done.png" onclick="visited_country();" id="done" style="cursor: pointer;"></p>
  </div>
<!-- calendar end -->

<!-- -==================================================== slide start =================================-->

  </div>
  <!-- slide javascript -->
  <script type="text/javascript">
    $(document).ready(function(){
      var currentPosition = 0;
      var slideWidth = 280;
      var slides = $('.slide');
      var numberOfSlides = slides.length;
    // Remove scrollbar in JS
    $('#slidesContainer').css('overflow', 'hidden');

    // Wrap all .slides with #slideInner div
    slides
    .wrapAll('<div id="slideInner"></div>')
      // Float left to display horizontally, readjust .slides width
      .css({
        'float' : 'left',
        'width' : slideWidth
      });

    // Set #slideInner width equal to total width of all slides
    $('#slideInner').css('width', slideWidth * numberOfSlides);

    // Insert controls in the DOM
    $('#slideshow')
    .prepend('<span class="control" id="leftControl">Clicking moves left</span>')
    .append('<span class="control" id="rightControl">Clicking moves right</span>');

    // Hide left arrow control on first load
    manageControls(currentPosition);

    // Create event listeners for .controls clicks
    $('.control')
    .bind('click', function(){
      // Determine new position
      currentPosition = ($(this).attr('id')=='rightControl') ? currentPosition+1 : currentPosition-1;
      
    // Hide / show controls
    manageControls(currentPosition);
      // Move slideInner using margin-left
      $('#slideInner').animate({
        'marginLeft' : slideWidth*(-currentPosition)
      });
    });

  // manageControls: Hides and Shows controls depending on currentPosition
  function manageControls(position){
    // Hide left arrow if position is first slide
    if(position==0){ $('#leftControl').hide() } else{ $('#leftControl').show()}
  // Hide right arrow if position is last slide
    if(position==numberOfSlides-1){ $('#rightControl').hide() } else{ $('#rightControl').show() }
    } 
  });
</script>

<div id="slideshow" style="OVERFLOW:hidden; display:none;">
  <div id="slidesContainer">
    <div class="slide" id="age">
      <!-- 나이 ,  연령별 -->
    </div>
    <div class="slide" id="season">
    </div><!-- 계절별 -->
  </div>
</div>
<!--========================================== slide end =================================================-->
<div class="canvas" id="canvas_id">
  <script>
//--------------------------------- 전역변수들 / default ---------------------------------

//----------------------------------- information form 연결 --------------------------------------

// return show_hide_box(this,340,170,'slideshow')

  //------------------------------------------------------------------------------------------
    

var stat_data = null;

function move_box(an, box, formid) {

        var id = formid;
        var cleft = 0;  //왼쪽마진  
        var ctop = 0;  //상단마진

        if(id == "calender"){
          cleft = -180;
          ctop = -125;
        }else if (id == "slideshow"){
          cleft += 20;
          ctop -= 93;
        }
        var obj = an;

        while (obj.offsetParent) {
          cleft += obj.offsetLeft;
          ctop += obj.offsetTop;
          obj = obj.offsetParent;
        }

        box.style.left = cleft + 'px';

        ctop += an.offsetHeight + 8;

        if (document.body.currentStyle &&
          document.body.currentStyle['marginTop']) {
          ctop += parseInt(
            document.body.currentStyle['marginTop']);
      }
      box.style.top = ctop + 'px';
      console.log('move_box');
    }

    function show_hide_box(an, width, height, idvalues){
      var formid = idvalues;
      var contents = document.getElementById(formid);


      if (contents != null) {
        if (contents.style.display=='none') {
          move_box(an, contents, formid);
          contents.align = 'left';
          contents.style.position = 'absolute';
          contents.style.width = width + 'px';
          contents.style.height = height + 'px';
          contents.style.display='block';
          console.log(contents);
        } else{
          contents.style.display='none';
        }
        return false;
      }  
      return false;
    }

    var age_margin = {top: 20, right: 20, bottom: 30, left: 40},
    age_width = 260 - age_margin.left - age_margin.right,
    age_height = 165 - age_margin.top - age_margin.bottom;

    var age_x0 = d3.scale.ordinal()
    .rangeRoundBands([0, age_width], .1);

    var age_x1 = d3.scale.ordinal();

    var age_y = d3.scale.linear()
    .range([age_height, 0]);

    var color_age = d3.scale.ordinal()
    .range(["#f3af6d", "#6197c3"]);

    var xAxis = d3.svg.axis()
    .scale(age_x0)
    .orient("bottom");

    // var yAxis = d3.svg.axis()
    // .scale(age_y)
    // .orient("left")
    // .tickFormat(d3.format(".2s"));

    var svg_age = d3.select("#age").append("svg")
    .attr("width", age_width + age_margin.left + age_margin.right)
    .attr("height", age_height + age_margin.top + age_margin.bottom)
    .append("g")
    .attr("transform", "translate(" + age_margin.left + "," + age_margin.top + ")");

    // d3.json(stat_data, function(error, data) {
    d3.csv("data/age.csv", function(error, data) {  

      var ageNames = d3.keys(data[0]).filter(function(key) { return key !== "age"; });

      data.forEach(function(d) {
        d.ages = ageNames.map(function(name) { return {name: name, value: +d[name]}; });
      });

      age_x0.domain(data.map(function(d) { return d.age; }));
      age_x1.domain(ageNames).rangeRoundBands([0, age_x0.rangeBand()]);
      age_y.domain([0, d3.max(data, function(d) { return d3.max(d.ages, function(d) { return d.value; }); })]);

      svg_age.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + age_height + ")")
      .call(xAxis);

      // svg_age.append("g")
      // .attr("class", "y axis")
      // .call(yAxis)
      // .append("text")
      // .attr("transform", "rotate(-90)")
      // .attr("y", 6)
      // .attr("dy", ".71em")
      // .style("text-anchor", "end")
      // .text("num");

      var age = svg_age.selectAll(".age")
      .data(data)
      .enter().append("g")
      .attr("class", "g")
      .attr("transform", function(d) { return "translate(" + age_x0(d.age) + ",0)"; });

      age.selectAll("rect")
      .data(function(d) { return d.ages; })
      .enter().append("rect")
      .attr("width", age_x1.rangeBand())
      .attr("x", function(d) { return age_x1(d.name); })
      .attr("y", function(d) { return age_y(d.value); })
      .attr("height", function(d) { return age_height - age_y(d.value); })
      .style("fill", function(d) { return color_age(d.name); });

      var legend = svg_age.selectAll(".legend")
      .data(ageNames.slice().reverse())
      .enter().append("g")
      .attr("class", "legend")
      .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

      legend.append("rect")
      .attr("x", age_width - 18)
      .attr("width", 18)
      .attr("height", 18)
      .style("fill", color_age);

      legend.append("text")
      .attr("x", age_width - 24)
      .attr("y", 9)
      .attr("dy", ".35em")
      .style("text-anchor", "end")
      .text(function(d) { return d; });
    });


//===========================================================================
     var width2 = 260,
    height2 = 165,
    radius = Math.min(width2, height2) / 2;

    var color_season = d3.scale.ordinal()
    .range(["#d0e68f", "#f5b75a", "#543d4d", "#2e4c7a"]);

    var arc = d3.svg.arc()
    .outerRadius(radius - 10)
    .innerRadius(radius - 70);

    var pie = d3.layout.pie()
    .sort(null)
    .value(function(d) { return d.num; });

    var svg_season = d3.select("#season").append("svg")
    .attr("width", width2)
    .attr("height", height2)
    .append("g")
    .attr("transform", "translate(" + width2 / 2 + "," + height2 / 2 + ")");

    d3.csv("data/season.csv", function(error, data) {
      data.forEach(function(d) {
        d.num = +d.num;
      });

      var g2 = svg_season.selectAll(".arc")
      .data(pie(data))
      .enter().append("g")
      .attr("class", "arc");

      g2.append("path")
      .attr("d", arc)
      .style("fill", function(d) { return color_season(d.data.season); });

      g2.append("text")
      .attr("transform", function(d) { return "translate(" + arc.centroid(d) + ")"; })
      .attr("dy", ".35em")
      .style("font-size","11.8")
      .style("font-weight","bold")
      .style("text-anchor", "middle")
      .style("font-family", "verdana")
      .style("fill","white")
      .text(function(d) { return d.data.season; });
    });

//=======================================================================


var width = screen.width,
height = (screen.height*3)/4,
active = d3.select(null);

var country, state;

var flag = 0;

var pro = d3.geo.mercator()
.scale(width/10)
.translate([width/2, height*7/10]);

var path = d3.geo.path()
.projection(pro);

      var zoom = d3.behavior.zoom() // Constructs a new zoom behavior
          .scaleExtent([1, 400]) // Specifies the zoom scale's allowed range as a two-element array, [minimum, maximum]
          .on("zoom", zoomed);

          var svg = d3.select(".canvas").append("svg")
          .attr("width", width)
          .attr("height", height)
          .call(zoom);
        //.call(drag);

        var state_city_names;

        svg.append("rect")
        .attr("class", "background")
        .attr("width". width)
        .attr("height", height)
        .on("mousedown", mouseDown)
        .on("mouseMove", mouseMove)
        .on("mouseUp", country_clicked)
        .on("mouseover", getContryNames)
        .on("mouseout", clearCountryNames)
        .on("mouseover", getStateNames)
        .on("mouseout", clearStateNames);


        svg
        .append('defs')
        .append('pattern')
        .attr('id', 'pattern')
        .attr('patternUnits', 'userSpaceOnUse')
        .attr('width', 4)
        .attr('height', 4)
        .append('path')
        .attr('d', 'M-1,1 l2,-2 M0,4 l4,-4 M3,5 l2,-2')
        .attr('stroke', '#f5d15c')
        .attr('stroke-width', 2);


        svg
        .append('defs')
        .append('pattern')
        .attr('id', 'pattern2')
        .attr('patternUnits', 'userSpaceOnUse')
        .attr('width', 2)
        .attr('height', 2)
        .append('circle')
        .attr('cx', 1)
        .attr('cy', 1)
        .attr('r', 1)
        .style('fill', '#f5d15c');

        var tooltip = d3.select("canvas").append("div")
        .attr("class", "tooltip");

        var toggle = d3.select("canvas").append("div")
        .attr("id", "toggle");

      var g = svg.append("g");  // g : group for svg


      var nation_code = '<%= search_result.nation_code %>';

      // if('<%= search_result.city_name %>' == nation_code + "CITY" || )
      var city_name = '<%= search_result.city_name %>';


      var tmp_d_for_search = null;
      var tmp_d_for_search2 = null;

      var visited_result = '<%= visit_results %>';
      var wanted_reault = '<%= want_results %>';

function DrawWoldMap(){

  if(nation_code == 'undefined'){
        d3.json("/json/world.json", function(error, world) {
          if (error) return console.error(error);

          if(visited_result === null || wanted_reault === null){
            g.append("g")
            .attr("class", "countries")
            .selectAll("path")
            .data(topojson.feature(world, world.objects.countries).features)
            .enter().append("path")
                  .attr("d", path)  // shape of an SVG Path element is defined in "d"
                  .attr("title", function(d,i) { return d.name; })
                  .on("mouseup", country_clicked) // mousedown 이벤트가 일어났을 시에는 clicked 함수로 가란 뜻
                  .on("mouseover", getContryNames) // mouseover 이벤트가 일어났을 시에는 getContryNames 함수로 가란 뜻
                  .on("mouseout", clearCountryNames)
                  .on("mousedown", mouseDown)
                  .on("mousemove", mouseMove)
                  .style("fill", function(d, i) {
                    return "<%=user.color%>";
                  });
                }else{
                  g.append("g")
                  .attr("class", "countries")
                  .selectAll("path")
                  .data(topojson.feature(world, world.objects.countries).features)
                  .enter().append("path")
                  .attr("d", path)  // shape of an SVG Path element is defined in "d"
                  .attr("title", function(d,i) { return d.name; })
                  .on("mouseup", country_clicked) // mousedown 이벤트가 일어났을 시에는 clicked 함수로 가란 뜻
                  .on("mouseover", getContryNames) // mouseover 이벤트가 일어났을 시에는 getContryNames 함수로 가란 뜻
                  .on("mouseout", clearCountryNames)
                  .on("mousedown", mouseDown)
                  .on("mousemove", mouseMove)
                  .style("fill", function(d, i) {
                    <% visit_results.forEach( function(item, index){ %>
                      if(d.id == '<%= item.vp_nation_code %>') return '#f3746d';
                      <% }); %>
                    <% want_results.forEach( function(item, index){ %>
                      if(d.id == '<%= item.wp_nation_code %>') return 'url(#pattern)';
                      <% }); %>
                    return '<%=user.color%>';
                  });
                }

                g.append("path")
                .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))
                .attr("class", "borders")
                .attr("d", path);

              });
          }

}

//--------------------------------- country tooltip 나타내게 하는 function ---------------------------------
function getContryNames(d){
  var xPosition = d3.select(this).attr("x");
  var yPosition = d3.select(this).attr("y");

        //Update the tooltip position and value
        d3.select("#tooltip_country")
          //Show the tooltip above where the mouse triggers the event
          .style("left", (d3.event.pageX - 70) + "px")     
          .style("top", (d3.event.pageY - 70) + "px")
          .select("#county-label")  
          .html("<strong>" + d.properties.name + "</strong>" + "<br/>");

        //Show the tooltip
        d3.select("#tooltip_country").classed("hidden", false);
      }

//--------------------------------- country tooltip 지우는 하는 function ---------------------------------
function clearCountryNames(d){
  d3.select("#tooltip_country").classed("hidden", true);
}


//--------------------------------- state tooltip 나타내게 하는 function ---------------------------------
function getStateNames(d){
  var xPosition = d3.select(this).attr("x");
  var yPosition = d3.select(this).attr("y");

        //Update the tooltip position and value
        d3.select("#tooltip_state")
          //Show the tooltip above where the mouse triggers the event
          .style("left", (d3.event.pageX - 70) + "px")     
          .style("top", (d3.event.pageY - 70) + "px")
          .select("#state-label")  
          .html("<strong>" + d.properties.name + "</strong>" + "<br/>");

        //Show the tooltip
        d3.select("#tooltip_state").classed("hidden", false);
      }


//--------------------------------- state tooltip 지우는 function ---------------------------------
function clearStateNames(d){
  d3.select("#tooltip_state").classed("hidden", true);
}


//--------------------------------- 드래그 체크하는 function1 ---------------------------------
function mouseDown(){
  flag = 0;
}


//--------------------------------- 드래그 체크하는 function2 ---------------------------------
function mouseMove(){
  flag = 1;
}


//--------------------------------- 나라 클릭하면 그 나라 지도로 넘어가는 코드 ---------------------------------
function country_clicked(d){

        console.log(d);

        if (flag === 0){  // dragging check  -> 드래그를 한 뒤 마우스를 뗄 때 country_clicked function이 작동하는 것 방지

          var name = d.properties.name;
          var code = d.id;
          var filename = "/json/states/"+code+".json";

          g.selectAll(".active").classed("active", false);
          g.selectAll(".state").remove();
          g.selectAll(".countries").style('display', 'none');

          if (d && country !== d) {

            country = d;
            state = null;

            d3.json(filename, function(error, state) {

              if (error) return console.error(error);

              if(visited_result === null || wanted_reault === null){
                g.append("g")
                .attr("class", "state")
                .selectAll("path")
                .data(topojson.feature(state, state.objects.layer1).features)
                .enter().append("path")
                .attr("d", path)  // shape of an SVG Path element is defined in "d"
                .attr("title", function(d,i) { return d.gn_name; })
                // .attr("class", "active")
                .on("mouseup", state_clicked) // mousedown 이벤트가 일어났을 시에는 clicked 함수로 가란 뜻
                .on("mouseover", getStateNames) // mouseover 이벤트가 일어났을 시에는 getContryNames 함수로 가란 뜻
                .on("mouseout", clearStateNames)
                .on("mousedown", mouseDown)
                .on("mousemove", mouseMove)
                .style("fill", function(d, i) {
                  return "<%=user.color%>";
                });
              }else{
                g.append("g")
                .attr("class", "state")
                .selectAll("path")
                .data(topojson.feature(state, state.objects.layer1).features)
                .enter().append("path")
                .attr("d", path)  // shape of an SVG Path element is defined in "d"
                .attr("title", function(d,i) { return d.gn_name; })
                // .attr("class", "active")
                .on("mouseup", state_clicked) // mousedown 이벤트가 일어났을 시에는 clicked 함수로 가란 뜻
                .on("mouseover", getStateNames) // mouseover 이벤트가 일어났을 시에는 getContryNames 함수로 가란 뜻
                .on("mouseout", clearStateNames)
                .on("mousedown", mouseDown)
                .on("mousemove", mouseMove)
                .style("fill", function(d, i) {
                  <% visit_results.forEach( function(item, index){ %>
                    if(d.properties.name == '<%= item.vp_city_name %>') return '#f3746d';
                    <% }); %>
                  <% want_results.forEach( function(item, index){ %>
                    if(d.properties.name == '<%= item.wp_city_name %>') return 'url(#pattern2)';
                    <% }); %>
                  return "<%=user.color%>";
                });

              }

              });

          click_zoom(d);
          zoom.translate(translate).scale(scale);

          getToggle(d); // 뿅뿅뿅 애니메이션을 불러오는 function
        }

      }else if(flag === 1){ // dragging check
        flag = 0;
      }

    }


//--------------------------------- 주나 도시를 클릭했을 시에 확대되는 코드 ---------------------------------
    function state_clicked(d){

        if (flag === 0){ // dragging check
          if (d && state !== d) {

            clearStateNames(d);

            state = d;

            active.classed("active", false);
            active = d3.select(this).classed("active", true);


            // g.attr("class", "city").attr("class", "active");

            click_zoom(d);

            getToggle(d); // 뿅뿅뿅 애니메이션을 불러오는 function
            
          } else {

            state = null;
            country = null;

            g.selectAll(".state").style('display', 'none');
            DrawWoldMap();

            zoom.translate([0, 0]).scale(1);

            clearToggle();


            reset();

          }
        }else if(flag === 1){ // dragging check
          flag = 0;
        }


      }

//--------------------------------- 검색했을 시에 확대되는 코드 ---------------------------------
      function search_country(d){

        if(nation_code != 'undefined'){

          d3.select("#home").classed("hidden", false);

          var filename = "/json/states/"+nation_code+".json";

          g.selectAll(".active").classed("active", false);

          g.selectAll(".state").remove();
          g.selectAll(".countries").style('display', 'none');


          d3.json("/json/world.json", function(error, world) {
            if (error) return console.error(error);

              g.append("g")
                  .attr("class", "countries")
                  .selectAll("path")
                  .data(topojson.feature(world, world.objects.countries).features)
                  .enter().append("path")
                  .attr("d", path)  // shape of an SVG Path element is defined in "d"
                  .attr("title", function(d,i) { return d.name; })
                  .on("mouseup", country_clicked) // mousedown 이벤트가 일어났을 시에는 clicked 함수로 가란 뜻
                  .on("mouseover", getContryNames) // mouseover 이벤트가 일어났을 시에는 getContryNames 함수로 가란 뜻
                  .on("mouseout", clearCountryNames)
                  .on("mousedown", mouseDown)
                  .on("mousemove", mouseMove)
                  .style("display", function(d, i) {
                     if(d.id != nation_code){

                      return "none";

                     }

                  })
                  .attr("transform", function(d) {

                    if(d.id == nation_code){

                      var bounds = path.bounds(d),  // Computes the projected bounding box (in pixels) for the specified feature.
                      dx = bounds[1][0] - bounds[0][0],
                      dy = bounds[1][1] - bounds[0][1],
                      x = (bounds[0][0] + bounds[1][0]) / 2,
                      y = (bounds[0][1] + bounds[1][1]) / 2;


                      scale = .9 / Math.max(dx / width, dy / height); // x 값과 y 값 중에서 더 큰 걸 기준으로 해서 그만큼 확대한다.
                      translate = [width / 2 - scale * x, height / 2 - scale * y];
                        
                      if(city_name != (nation_code + "CITY") && city_name != null){
                        search_state_detail(d);
                      }else{
                        search_country_detail(d);
                      }

                      return "translate(" + translate  + ")scale(" + scale + ")";
                    }

                });

          });
      }

    }

    function search_country_detail(d){

          var code = d.id;
          var filename = "/json/states/"+code+".json";

          g.selectAll(".countries").style('display', 'none');

        if (flag === 0){ 

          if (d && country !== d) {

            country = d;
            state = null;

            d3.json(filename, function(error, state) {

              if (error) return console.error(error);

                g.append("g")
                .attr("class", "state")
                .selectAll("path")
                .data(topojson.feature(state, state.objects.layer1).features)
                .enter().append("path")
                .attr("d", path)  // shape of an SVG Path element is defined in "d"
                .attr("title", function(d,i) { return d.gn_name; })
                // .attr("class", "active")
                .on("mouseup", search_state_clicked) // mousedown 이벤트가 일어났을 시에는 clicked 함수로 가란 뜻
                .on("mouseover", getStateNames) // mouseover 이벤트가 일어났을 시에는 getContryNames 함수로 가란 뜻
                .on("mouseout", clearStateNames)
                .on("mousedown", mouseDown)
                .on("mousemove", mouseMove)
                .style("fill", function(d, i) {
                  <% visit_results.forEach( function(item, index){ %>
                    if(d.properties.name == '<%= item.vp_city_name %>') return '#f3746d';
                    <% }); %>
                  <% want_results.forEach( function(item, index){ %>
                    if(d.properties.name == '<%= item.wp_city_name %>') return 'url(#pattern2)';
                    <% }); %>
                  return "<%=user.color%>";
                });

              });

          click_zoom(d);
          zoom.translate(translate).scale(scale);

          getToggle(d); // 뿅뿅뿅 애니메이션을 불러오는 function
        }

        }else if(flag === 1){ // dragging check
          flag = 0;
        }


    }

    function search_state_detail(d){

          // var name = d.properties.name;
          var code = d.id;
          var filename = "/json/states/"+code+".json";

          /*g.selectAll(".active").classed("active", false);
          g.selectAll(".state").remove();*/
          g.selectAll(".countries").style('display', 'none');

        if (flag === 0){ 

          // if (d && state !== d) {

            country = d;

            d3.json(filename, function(error, state) {

              if (error) return console.error(error);

                g.append("g")
                .attr("class", "state")
                .selectAll("path")
                .data(topojson.feature(state, state.objects.layer1).features)
                .enter().append("path")
                .attr("d", path)  // shape of an SVG Path element is defined in "d"
                .attr("title", function(d,i) { return d.gn_name; })
                .on("mouseup", search_state_clicked) // mousedown 이벤트가 일어났을 시에는 clicked 함수로 가란 뜻
                .on("mouseover", getStateNames) // mouseover 이벤트가 일어났을 시에는 getContryNames 함수로 가란 뜻
                .on("mouseout", clearStateNames)
                .on("mousedown", mouseDown)
                .on("mousemove", mouseMove)
                .style("fill", function(d, i) {
                  <% visit_results.forEach( function(item, index){ %>
                    if(d.properties.name == '<%= item.vp_city_name %>') return '#f3746d';
                    <% }); %>
                  <% want_results.forEach( function(item, index){ %>
                    if(d.properties.name == '<%= item.wp_city_name %>') return 'url(#pattern2)';
                    <% }); %>
                  return "<%=user.color%>";
                })
                .attr("transform", function(d) {

                    if(d.properties.name == city_name){

                     /* active.classed("active", false);
                      active = d3.select(this).classed("active", true);*/
                      click_state_zoom(d);
                      zoom.translate(translate).scale(d);
                      getToggle(d); 


                    }

                });

              });

               click_zoom(d);
          zoom.translate(translate).scale(scale);

          getToggle(d); // 뿅뿅뿅 애니메이션을 불러오는 function
        

        }else if(flag === 1){ // dragging check
          flag = 0;
        }


    }

//--------------------------------- 주나 도시를 클릭했을 시에 확대되는 코드 ---------------------------------
      function search_state_clicked(d){

        if (flag === 0){ // dragging check
          if (d && state !== d) {

            clearStateNames(d);

            state = d;

            // console.log("search_state_detail의 search_state_clicked : " + city_name);

            active.classed("active", false);
            active = d3.select(this).classed("active", true);


            // g.attr("class", "city").attr("class", "active");

            click_zoom(d);

            getToggle(d); // 뿅뿅뿅 애니메이션을 불러오는 function
            
          } else {

            state = null;


            if( city_name != (nation_code + "CITY")){
              city_name = (nation_code + "CITY");
              city_name = null;
              search_country();
            }else{
              search_country();
            }

            zoom.translate([0, 0]).scale(1);

            clearToggle();


            reset();

          }
        }else if(flag === 1){ // dragging check
          flag = 0;
        }


      }

//--------------------------------- 클릭 zoom에 관한 function ---------------------------------
function click_zoom(d){

        var bounds = path.bounds(d),  // Computes the projected bounding box (in pixels) for the specified feature.
        dx = bounds[1][0] - bounds[0][0],
        dy = bounds[1][1] - bounds[0][1],
        x = (bounds[0][0] + bounds[1][0]) / 2,
        y = (bounds[0][1] + bounds[1][1]) / 2;


        scale = .9 / Math.max(dx / width, dy / height); // x 값과 y 값 중에서 더 큰 걸 기준으로 해서 그만큼 확대한다.
        translate = [width / 2 - scale * x, height / 2 - scale * y];

        g.transition()
        .duration(500)
        .attr("transform", "translate(" + translate  + ")scale(" + scale + ")");

      }


function click_state_zoom(d){

        var bounds = path.bounds(d),  // Computes the projected bounding box (in pixels) for the specified feature.
        dx = bounds[1][0] - bounds[0][0],
        dy = bounds[1][1] - bounds[0][1],
        x = (bounds[0][0] + bounds[1][0]) / 2,
        y = (bounds[0][1] + bounds[1][1]) / 2;


        scale = .9 / Math.max(dx / width, dy / height); // x 값과 y 값 중에서 더 큰 걸 기준으로 해서 그만큼 확대한다.
        translate = [width / 2 - scale * x, height / 2 - scale * y];

        g.transition()
        .duration(500)
        .attr("transform", "translate(" + translate  + ")scale(" + scale + ")");

        state = d;

}

//--------------------------------- 뿅뿅뿅 애니메이션을 불러오는 function ---------------------------------
function getToggle(d){

        var bounds = path.bounds(d), 
        dx = bounds[1][0] - bounds[0][0],
        dy = bounds[1][1] - bounds[0][1];

        d3.select("#toggle_button")
        /*.style("left", (width/2 - dx - 40) + "px")
        .style("top", (height/2 - dy - 40) + "px")*/
        .style("left", (width/2 - 40) + "px")
        .style("top", (height/2 - 40) + "px")
        // .attr("transform", "translate(" + path.centroid(d) + ")");
        


        //--------------------------------- 원 모양으로 퍼지는 코드 ---------------------------------
        var items = document.querySelectorAll('.circle a');

        for(var i = 0, l = items.length; i < l; i++) {
          items[i].style.left = (((width/2) - 90*Math.cos(2 * Math.PI - 1*(1/l)*i*Math.PI)).toFixed(4)) + "px";

          items[i].style.top = (((height/2) + 90*Math.sin(2 * Math.PI - 1*(1/l)*i*Math.PI)).toFixed(4)) + "px";
        }
        //--------------------------------------------------------------------------------------


        if(document.getElementById('circle_id').className == 'circle'){     // className == 'circle'

          document.querySelector('#toggle_button').onclick = function(e) {
            e.preventDefault();
            document.querySelector('.circle').classList.toggle('open');
          }
          
        }else {     // className == 'circle open'
        document.querySelector('.circle').classList.toggle('open');
      }

      d3.select("#toggle_button")
      .html(d.properties.name);


      d3.select("#toggle").classed("hidden", false);
      d3.select(".circle").style("display", "initial");
      d3.select(".circle .icon-gashipYo").style("display", "initial");
      d3.select(".circle .icon-coloringIcon").style("display", "initial");
      d3.select(".circle .icon-photoLook").style("display", "initial");
      d3.select(".circle .icon-information").style("display", "initial");
        // d3.select(".circle").classed("hidden", false);

        var cvflag = true;
        var svflag = true;
        var cwflag = true;
        var swflag = true;



        if(visited_result === ''){
          
            d3.select(".circle .icon-photoLook").style("display", "none");
        }

          

        if(state == null){

          <% visit_results.forEach( function(item, index){ %>
            if(country.id == '<%= item.vp_nation_code %>'/* && cvflag == true*/) {
              /*console.log("다녀온 국가(country.id) 일치 : " + country.id);
              console.log("다녀온 국가(vp_nation_code) 일치 : " + '<%= item.vp_nation_code %>');*/

              d3.select(".circle .icon-gashipYo").style("display", "none");
              // d3.select(".circle .icon-coloringIcon").style("display", "none");
              d3.select(".circle .icon-photoLook").style("display", "initial");

              cvflag = false;
            }else if(country.id != '<%= item.vp_nation_code %>' && cvflag == true){
              /*console.log("다녀온 국가(country.id) 불일치 : " + country.id);
              console.log("다녀온 국가(vp_nation_code) 불일치 : " + '<%= item.vp_nation_code %>');*/

              d3.select(".circle .icon-photoLook").style("display", "none");
              cvflag = false;
            }
          <% }); %>

            /*<% want_results.forEach( function(item, index){ %>
              if(country.id == '<%= item.wp_nation_code %>' && cwflag == true) {
                d3.select(".circle .icon-photoLook").style("display", "none");
                d3.select(".circle .icon-gashipYo").style("display", "initial");
                d3.select(".circle .icon-coloringIcon").style("display", "initial");
                cwflag = false;
              }
            <% }); %>*/
          d3.select(".circle .icon-infomation").style("display", "initial");

        }else{

          <% visit_results.forEach( function(item, index){ %>
            if(state.properties.name == '<%= item.vp_city_name %>') {
              /*console.log("다녀온 도시(state.properties.name) 일치 : " + state.properties.name);
              console.log("다녀온 도시(vp_city_name) 일치 : " + '<%= item.vp_city_name %>');*/

              d3.select(".circle .icon-gashipYo").style("display", "none");
              // d3.select(".circle .icon-coloringIcon").style("display", "none");
              d3.select(".circle .icon-photoLook").style("display", "initial");
              svflag = false;
            }else if(state.properties.name != '<%= item.vp_city_name %>' && svflag == true){
              /*console.log("다녀온 도시(state.properties.name) 불일치 : " + state.properties.name);
              console.log("다녀온 도시(vp_city_name) 불일치 : " + '<%= item.vp_city_name %>');*/

              d3.select(".circle .icon-photoLook").style("display", "none");
              svflag = false;
            }
          <% }); %>

          <% want_results.forEach( function(item, index){ %>
            if(state.properties.name == '<%= item.wp_city_name %>' && swflag == true) {
              d3.select(".circle .icon-photoLook").style("display", "none");
              d3.select(".circle .icon-gashipYo").style("display", "initial");
              d3.select(".circle .icon-coloringIcon").style("display", "initial");
              swflag = false;
            }
          <% }); %>

          d3.select(".circle .icon-infomation").style("display", "none");

        }


      }


//--------------------------------- 뿅뿅뿅 애니메이션 깨끗하게 정리하는 코드 ---------------------------------
function clearToggle(){
  d3.select("#toggle").classed("hidden", true);
  d3.select(".circle").style("display", "none");
  // d3.select(".circle").classed("hidden", true);
}

//--------------------------------- 방문한 국가 버튼 누르면 연결되는 function ---------------------------------
function visited_country(){ 
  var f = document.getElementById('goLink');

  var visitDate = document.getElementById('datepicker').value;

  console.log(visitDate);

  f.visit_date.value = visitDate;

  if(state == null){

    console.log(country.id);
    f.visit_nation_code.value = country.id;

  }else {

    console.log(state.properties.adm0_a3);
    console.log(state.properties.name);
    f.visit_nation_code.value = state.properties.adm0_a3;
    f.visit_city_name.value = state.properties.name;

  }

  f.action="/paint_visit_place";
  f.method="post";
  f.submit();

}

//--------------------------------- 가싶요 버튼 누르면 연결되는 function ---------------------------------
function gashipYo() { 

  var f = document.getElementById('goLink');


  if(state == null){

    f.want_nation_code.value = country.id;

  }else {

    f.want_nation_code.value = state.properties.adm0_a3;
    f.want_city_name.value = state.properties.name;

  }

  f.action="/mark_want_place";
  f.method="post";
  f.submit();


}

function photoLook() {

  var f = document.getElementById('goLink');


  if(state == null){

    f.nation_code.value = country.id;
    f.user_id.value = '<%=user.id%>';
    f.user_name.value = '<%=user.name%>';
    f.action="/nation_photo_view";

  }else {

    f.nation_code.value = state.properties.adm0_a3;
    f.city_name.value = state.properties.name;
    f.user_id.value = '<%=user.id%>';
    f.user_name.value = '<%=user.name%>';
    f.action="/city_photo_view";

  }

  f.method="post";
  f.submit();

}


function photoUpload() {

  var f = document.getElementById('goLink');


  if(state == null){

    f.nation_code.value = country.id;
    f.city_name.value = null;

  }else {

    f.nation_code.value = state.properties.adm0_a3;
    f.city_name.value = state.properties.name;
    console.log(state.properties.name);

  }

  f.action="/photo_upload";
  f.method="post";
  f.submit();

}

/*
  function see_information() { 

    var f = document.getElementById('goLink');

    if(state == null){
      f.nation_code.value = country.id;

    }else {

      f.nation_code.value = state.properties.adm0_a3;

    }

    f.action="/nation_statistics";
    f.method="post";
    f.submit();

    $('#goLink').ajaxForm(function(resault) { 

        $("#slidesContainer").empty(); // div 하위 요소 모두 제거


        var div_data = $("<div class='slide' id='age'></div><div class='slide' id='season'></div>");
        $(div_data).appendTo("#slidesContainer");

        drawStatic(resault);
        show_hide_box(this,340,170,'slideshow');

    });


  }
*/

//--------------------------------- 지도 리셋하는 function ---------------------------------
function reset() {
  active.classed("active", false);
  g.selectAll(".active").classed("active", false);
  active = d3.select(null);

  g.transition()
  .duration(800)
  .attr("transform", "translate([" + 0 + ", " + 0 + "])scale(" + width/10 + ")");

  d3.event.transform = null;

  zoom.translate([0, 0]).scale(1);
}

//--------------------------------- 마우스 휠 zoom 관련한 function (현재 미사용) ---------------------------------
function zoomed() {

  g.style("stroke-width", 0.5 / d3.event.scale + "px");
  g.attr("transform", "translate(" + d3.event.translate + ")scale(" + d3.event.scale + ")");

  if(d3.event.scale == 1 && !state)
    return reset();
}

</script>

</div>


</div>

<!--=== Footer ===-->
<div class="footer">
  <div class="container">
    <div class="row">
      <div class="col-md-4 md-margin-bottom-40">
        <!-- About -->
        <div class="headline"><h2><b>Photommaper 사용자 약관</b></h2></div>  
        <p class="margin-bottom-25 md-margin-bottom-40">PhotoMapper is ~</p>    
        <!-- End About -->
      </div><!--/col-md-4-->  

      <div class="col-md-4">
        <!-- Contact Us -->
        <div class="headline"><h2><b>주소 및 연락처</b></h2></div> 
        <address class="md-margin-bottom-40">
          잠실 향군타워 5층, sGen Club <br />
          서울특별시 송파구 신천동 7-29 <br />
          Phone: xxx xxx xxxx <br />
          Fax: xxx xxx xxxx <br />
        </address>
        <!-- End Contact Us -->
      </div><!--/col-md-4-->

      <div class="col-md-4">
       <!-- Social Links -->  
       <div class="headline"><h2>링크</h2></div> 
       <ul class="social-icons">
        <li><a href="#" data-original-title="Feed" class="social_rss"></a></li>
        <li><a href="#" data-original-title="Facebook" class="social_facebook"></a></li>
        <li><a href="#" data-original-title="Twitter" class="social_twitter"></a></li>
        <li><a href="#" data-original-title="Goole Plus" class="social_googleplus"></a></li>
        <li><a href="#" data-original-title="Pinterest" class="social_pintrest"></a></li>
        <li><a href="#" data-original-title="Linkedin" class="social_linkedin"></a></li>
        <li><a href="#" data-original-title="Vimeo" class="social_vimeo"></a></li>
      </ul>
      <!-- End Social Links -->
    </div>
  </div>
</div> 
</div><!--/footer-->
<!--=== End Footer ===-->
<div class="copyright">
  <div class="container">
    <div class="row">
      <div class="col-md-6">  
        <a href="/main">
          <img class="pull-right" id="logo-footer" src="/images/menubar/PageLogoWhite.png" alt="Logo">
        </a>
      </div>
    </div>
    <div class="row">
      <div class="col-md-6">                     
        <p>
          2014 &copy; PhotoMapper. ALL Rights Reserved.
        </p>
      </div>
    </div>
  </div> 
</div><!--/copyright--> 
</div> <!-- wrapper end -->  

</html>


<script type="text/javascript" src="/assets/plugins/jquery-migrate-1.2.1.min.js"></script>
<script type="text/javascript" src="/assets/plugins/bootstrap/js/bootstrap.min.js"></script>
<!-- JS Implementing Plugins -->
<script type="text/javascript" src="/assets/plugins/back-to-top.js"></script>
<script type="text/javascript" src="/assets/plugins/flexslider/jquery.flexslider-min.js"></script>
<script type="text/javascript" src="/assets/plugins/parallax-slider/js/modernizr.js"></script>
<script type="text/javascript" src="/assets/plugins/parallax-slider/js/jquery.cslider.js"></script>
<script type="text/javascript" src="assets/plugins/fancybox/source/jquery.fancybox.pack.js"></script>
<!-- JS Page Level -->           
<script type="text/javascript" src="/assets/js/app.js"></script>
<script type="text/javascript" src="/assets/js/pages/index.js"></script>
<script type="text/javascript" src="/assets/plugins/counter/waypoints.min.js"></script>
<script type="text/javascript" src="/assets/plugins/counter/jquery.counterup.min.js"></script>   

<script type="text/javascript">
  jQuery(document).ready(function() {
    App.init();
    App.initSliders();
    App.initFancybox();
    App.initCounter();
    Index.initParallaxSlider();  
    DrawWoldMap();
  });

  var nation_code = '<%= search_result.nation_code %>';

  if(nation_code != 'undefined') {
    $(".btn-u").click(search_country());
  }

</script>

</body>
<!-- 
TODO LIST
2. 주요 도시 점으로 위치 표시되고 이름 나타나게 하기  ====> 보류
    ( 보류 이유 ) 급한 거 아님
3. 지도 확대 완성하기
4. 이미 가싶요/방문한 나라 리스트에 있는 나라면 해당하는 버튼이 나오지 않게 만들기  ====> 보류
    ( 보류 이유 ) 나라마다 버튼이 나오고 안 나오고를 구분해 줘야 하는데, 예상외로 방법이 무지 어렵고 시간 소요가 많아 보임. 
                고로, 나중에 시간이 남으면 하겠음.
-->